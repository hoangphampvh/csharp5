@page "/Checkout"
@using BILL.ViewModel.Cart;
@using ClientUI.Service.IResponsitories;
@inject IResponsitoriesCartDetail _oCartDetail;
@inject NavigationManager navigation;
@inject IJSRuntime Js;


    

@if (ShoppingCartItems != null)
{
        <MudTable Items="@ShoppingCartItems"  @bind-SelectedItem="selectedItem1">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Danh sách đơn hàng</MudText>
                <MudSpacer />
             
            </ToolBarContent>
            <HeaderContent>

                <MudTh>ProductName</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Price</MudTh>
                <MudTh>UrlImage</MudTh>
                <MudTh>Status</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="ProductName">@context.ProductName</MudTd>
                <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
                <MudTd DataLabel="Price">@context.Price</MudTd>
                <MudTd DataLabel="Price">@(context.Price * context.Quantity)</MudTd>
                    <MudTd DataLabel="UrlImage"> <MudImage ObjectFit="ObjectFit.Fill" Src="@context.UrlImage" Width="50" Height="50"></MudImage></MudTd>
                    <MudTd DataLabel="Status">@context.Status</MudTd>
              
                  
                </RowTemplate>
                <PagerContent>

                    <MudTablePager />
                </PagerContent>
            </MudTable>
}
@code{
    protected IEnumerable<CartDetailVM> ShoppingCartItems { get; set; }

    protected int TotalQty { get; set; }

    protected string PaymentDescription { get; set; }

    protected decimal PaymentAmount { get; set; }

    private CartDetailVM selectedItem1 = null;


    protected string DisplayButtons { get; set; } = "block";

    protected override async Task OnInitializedAsync()
    {
        ShoppingCartItems = await _oCartDetail.GetAllCartDetail();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            if (firstRender)
            {
             //   await Js.InvokeVoidAsync("initPayPalButton");
            }
        }
        catch (Exception)
        {

            throw;
        }
    }
}
